use sbi_rt::{system_reset, NoReason, Shutdown};
pub fn os_shut_down() -> ! {
    system_reset(Shutdown, NoReason);
    unreachable!()
}

use riscv::register::satp::{self, Mode, Satp};

pub fn change_pagetable(paddr: usize) {
    // 1. Read the current Satp value using the module's read() function
    let mut satp_val = satp::read(); // This should return a Satp struct instance

    // 2. Modify its fields using setter methods.
    // These methods are typically generated by the read_write_csr! macro.
    satp_val.set_mode(Mode::Sv39);
    satp_val.set_asid(0);
    satp_val.set_ppn(paddr >> 12);

    // 3. Write the modified Satp value back
    unsafe {
        satp::write(satp_val);
    }
}

pub fn flush() {
    unsafe {
        riscv::asm::sfence_vma_all();
    }
}